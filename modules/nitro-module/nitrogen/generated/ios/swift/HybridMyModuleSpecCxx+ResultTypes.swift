///
/// HybridMyModuleSpecCxx+ResultTypes.swift
/// Sat Aug 10 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/react-native-nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

/**
 * C++ does not support catching Swift errors yet, so we have to wrap
 * them in a Result type.
 * - .value means the function returned successfully (either a value, or void)
 * - .error means the function threw any Error. Only the message can be propagated
 *
 * HybridMyModuleSpecCxx will then wrap all calls to HybridMyModuleSpec
 * to properly catch Swift errors and return either .value or .error to C++.
 */

import NitroModules

/**
 * The exception-free result type for HybridMyModuleSpec.addNumbers(...).
 * Original func:
 * ```swift
 * func addNumbers(a: Double, b: Double) throws -> Double
 * ```
 * - seealso: `HybridMyModuleSpec.addNumbers(a:, b:)`
 */
@frozen
public enum HybridMyModuleSpecCxx_addNumbers_Result {
  case value(Double)
  case error(message: String)
}

/**
 * The exception-free result type for HybridMyModuleSpec.addStrings(...).
 * Original func:
 * ```swift
 * func addStrings(a: String, b: String) throws -> String
 * ```
 * - seealso: `HybridMyModuleSpec.addStrings(a:, b:)`
 */
@frozen
public enum HybridMyModuleSpecCxx_addStrings_Result {
  case value(String)
  case error(message: String)
}
